name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      product_api_ip:
        default: 'http://<ip_address>:8000'
      order_api_ip:
        default: 'http://<ip_address>:8001'
      aks_cluster_name:
        default: 'week08-aks'
      aks_resource_group:
        default: 'week08-rg'

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: az acr login --name week08acr5678

      - name: Inject Backend IPs
        run: |
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" frontend/main.js
          cat frontend/main.js

      - name: Build and Push Frontend
        run: |
          docker build -t week08acr5678.azurecr.io/frontend:latest ./frontend/
          docker push week08acr5678.azurecr.io/frontend:latest

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group ${{ inputs.aks_resource_group }} \
            --name ${{ inputs.aks_cluster_name }} --overwrite-existing

      - name: Deploy Frontend
        run: |
          cd k8s/
          kubectl apply -f frontend.yaml

      - name: Logout
        run: az logout
